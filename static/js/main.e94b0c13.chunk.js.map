{"version":3,"sources":["serviceWorker.js","actions/dashboard/dashboard.js","utils.js","reducers/dashboard/dashboard.js","reducers/dashboard/index.js","reducers/index.js","store.js","components/headers/DashboardHeader/DashboardHeader.js","components/headers/DashboardHeader/index.js","components/navbars/SideNavbar/SideNavbar.js","components/navbars/SideNavbar/index.js","components/cards/UserCard/UserCard.js","components/cards/UserCard/index.js","components/others/UserCardContainer/UserCardContainer.js","components/others/UserCardContainer/index.js","screens/Dashboard/Dashboard.js","screens/Dashboard/index.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","createTeam","data","type","createUser","updateUser","deleteUser","selectTeam","randomIdGenerate","key","Math","random","toString","substr","margeObjectInList","list","object","i","length","id","selectByDefault","selectId","userCreate","user","team","filter","t","users","userUpdate","map","u","userDelete","initialState","isFetching","message","retry","reducer","action","combineReducers","dashboard","reducers","middleware","applyMiddleware","thunk","store","createStore","allReducers","DashboardHeader","props","teamList","label","value","handleCreateTeam","e","preventDefault","setState","team_type","team_name","this","className","onSubmit","htmlFor","options","placeholder","onChange","required","target","React","Component","connect","dispatch","bindActionCreators","withRouter","SideNavbar","handleClickSelect","onClick","UserCard","handleChangeDescription","user_description","handleUpdateUser","style","height","scrollHeight","handleCreate","user_name","handleDelete","prevProps","prevState","snapshot","defaultProps","UserCardContainer","search","toLowerCase","includes","isStringIncludes","Dashboard","App","exact","path","component","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e94b0c13.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const CREATE_TEAM = 'CREATE_TEAM';\nexport const CREATE_USER = 'CREATE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const SELECT_TEAM = 'SELECT_TEAM';\n\nexport const createTeam = (data) => ({\n    type: CREATE_TEAM,\n    data\n});\n\n\nexport const createUser = (data) => ({\n    type: CREATE_USER,\n    data\n});\n\nexport const updateUser = (data) => ({\n    type: UPDATE_USER,\n    data\n});\n\nexport const deleteUser = (data) => ({\n    type: DELETE_USER,\n    data\n});\n\nexport const selectTeam = (data) => ({\n    type: SELECT_TEAM,\n    data\n});","export const randomIdGenerate = (key) => {\n    return key + Math.random().toString(36).substr(2, 9);\n};\n\nexport const margeObjectInList = (list, object) => {\n    for (let i = 0; i < list.length - 1; i++) {\n        if (list[i].id === object.id) {\n            list[i] = object\n        }\n    }\n    return list;\n};\n\nexport const selectByDefault = (list, selectId) => {\n    if (!!list.length) {\n        selectId = !selectId ? list[0].id : selectId;\n    }\n    return selectId\n};\n\nexport const userCreate = (list, selectId, user) => {\n    let team = list.filter(t => t.id === selectId)[0];\n    team.users = [{...user, id: randomIdGenerate('user_')}, ...team.users];\n    return margeObjectInList(list, team);\n};\n\nexport const userUpdate = (list, selectId, user) => {\n    let team = list.filter(t => t.id === selectId)[0];\n    team.users = team.users.map(u => u.id === user.id ? user : u);\n    return margeObjectInList(list, team);\n};\n\nexport const userDelete = (list, selectId, user) => {\n    let team = list.filter(t => t.id === selectId)[0];\n    team.users = team.users.filter(u => u.id !== user.id);\n    return margeObjectInList(list, team);\n};\n\nexport const isStringIncludes = (user, search) => {\n    return (user.user_name).toLowerCase().includes((search).toLowerCase());\n};\n\n\n","import {\n    CREATE_TEAM,\n    CREATE_USER,\n    UPDATE_USER,\n    DELETE_USER,\n    SELECT_TEAM,\n} from '../../actions/dashboard/dashboard';\nimport {selectByDefault, userCreate, userDelete, userUpdate} from \"../../utils\";\n\nconst initialState = {\n    selectId: '',\n    list: [],\n    isFetching: false,\n    error: false,\n    message: null,\n    retry: false,\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case CREATE_TEAM:\n            return {\n                ...state,\n                list: [...state.list, action.data],\n                selectId: selectByDefault([...state.list, action.data], state.selectId)\n            };\n        case CREATE_USER:\n            return {...state, list: userCreate(state.list, state.selectId, action.data.user)};\n        case UPDATE_USER:\n            return {...state, list: userUpdate(state.list, state.selectId, action.data.user)};\n        case DELETE_USER:\n            return {...state, list: userDelete(state.list, state.selectId, action.data.user)};\n        case SELECT_TEAM:\n            return {...state, selectId: action.data.id};\n\n        default:\n            return {...state};\n    }\n\n};\n\nexport default reducer;\n","//External Imports\nimport {combineReducers} from 'redux';\n\n//My Imports\nimport dashboard from './dashboard';\n\n\nexport default combineReducers({\n    dashboard,\n})\n","// External Imports\nimport {combineReducers} from 'redux';\n\n// My Imports\nimport dashboard from './dashboard';\n\n\nconst reducers = () => combineReducers({\n    dashboard,\n});\n\n\nexport default reducers;\n","// External Imports\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';    // allows us to dispatch asynchronous actions.\n\n// My Imports\nimport allReducers from './reducers';\n\nconst middleware = applyMiddleware(thunk);\n\n// logger\nconst store = createStore(\n    allReducers(),\n    middleware\n);\n\nexport default store;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\nimport {createTeam} from \"../../../actions/dashboard/dashboard\";\nimport {randomIdGenerate} from \"../../../utils\";\n\n\nclass DashboardHeader extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team_name: '',\n            team_type: '',\n            users: [],\n        };\n    }\n\n    teamList = [\n        {label: 'Team', value: 'team'}\n    ]\n\n    componentDidMount() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    handleCreateTeam = (e) => {\n        e.preventDefault();\n        this.props.createTeam({id: randomIdGenerate('team_'), ...this.state});\n        this.setState({team_type: '', team_name: ''});\n    }\n\n\n    render() {\n        let {team_name, team_type} = this.state;\n\n        return (\n            <div className=\"dashboard-header-container\">\n                <div className=\"dashboard-header\">\n                    <div className=\"dashboard-team-create\">\n                        <form onSubmit={(e) => this.handleCreateTeam(e)}>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col\">\n                                    <label htmlFor=\"pwd\">Select Type:</label>\n                                    <Select className=\"custom-react-select\" options={this.teamList}\n                                            placeholder=\"choose Any\"\n                                            value={this.teamList.filter(team => team.value === team_type)[0] || ''}\n                                            onChange={({value}) => this.setState({team_type: value})}/>\n                                </div>\n                                <div className=\"form-group col\">\n                                    <label htmlFor=\"name\">Team Name</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter here\"\n                                           value={team_name || ''} required\n                                           onChange={(e) =>\n                                               this.setState({team_name: e.target.value}\n                                               )}/>\n                                </div>\n                                <div className=\"col d-flex justify-content-end align-items-center\">\n                                    <button type=\"submit\" className=\"btn btn-warning btn-sm team-create-button\">\n                                        CREATE\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    createTeam,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DashboardHeader));\n\n","import DashboardHeader from './DashboardHeader';\n\nexport default DashboardHeader;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {selectTeam} from \"../../../actions/dashboard/dashboard\";\n\n\nclass SideNavbar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    handleClickSelect = (id) => {\n        this.props.selectTeam({id})\n    }\n\n    render() {\n        let {dashboard: {list, selectId}} = this.props;\n\n        return (\n            <div className=\"sidenavbar-container\">\n                <h2 className=\"sidenavbar-header\">Teams</h2>\n                <ul className=\"list-unstyled sidenavbar-list-container\">\n                    {list.map(team => (\n                        <li key={team.id} className={`sidenavbar-list ${team.id === selectId ? 'active' : ''}`}\n                            onClick={() => this.handleClickSelect(team.id)}>\n                            {team.team_name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    selectTeam,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SideNavbar));\n\n","import SideNavbar from './SideNavbar';\n\nexport default SideNavbar;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport {createUser, deleteUser, updateUser} from \"../../../actions/dashboard/dashboard\";\n\n\nclass UserCard extends React.Component {\n\n    static propTypes = {\n        selectId: PropTypes.string,\n        user: PropTypes.object,\n    }\n\n    static defaultProps = {\n        selectId: '',\n        user: {},\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_name: !!props.user ? props.user.user_name : '',\n            user_description: !!props.user ? props.user.user_description : '',\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        let {selectId, user} = this.props;\n\n        if (selectId !== prevProps.selectId) {\n            this.setState({user_name: user.user_name, user_description: user.user_description});\n        }\n    }\n\n    handleChangeDescription = (e) => {\n        this.setState({\n            user_description: e.target.value\n        }, () => {\n            this.handleUpdateUser();\n        });\n        e.target.style.height = 'auto';\n        e.target.style.height = (e.target.scrollHeight) + 'px';\n    }\n\n    handleUpdateUser = () => {\n        let {user} = this.props;\n        if (user.id) {\n            this.props.updateUser({user: {...user, ...this.state}});\n        }\n    }\n\n    handleCreate = (e) => {\n        e.preventDefault();\n        this.props.createUser({user: {...this.state}});\n        this.setState({user_name: '', user_description: ''});\n    }\n\n    handleDelete = () => {\n        let {user} = this.props;\n        this.props.deleteUser({user});\n    }\n\n    render() {\n        let {user_name, user_description} = this.state\n        let {user} = this.props;\n\n        return (\n            <div className=\"user-card\">\n                <form onSubmit={this.handleCreate}>\n                    <div className=\"form-group\">\n                        <label className=\"form-label\" htmlFor=\"user-name\">Name</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter here\"\n                               value={user_name || ''} required\n                               onChange={(e) =>\n                                   this.setState({user_name: e.target.value}, this.handleUpdateUser)}/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label className=\"form-label\" htmlFor=\"user-name\">Description</label>\n                        <textarea className=\"form-control user-description\" value={user_description || ''} required\n                                  onChange={(e) => this.handleChangeDescription(e)}/>\n                    </div>\n                    {!user.id &&\n                    <button type=\"submit\" className=\"btn btn-sm btn-warning user-card-button\">\n                        Create User +\n                    </button>\n                    }\n                </form>\n\n                {!!user.id &&\n                <button className=\"btn btn-sm btn-danger user-card-button\" onClick={this.handleDelete}>\n                    Delete User -\n                </button>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    createUser,\n    deleteUser,\n    updateUser,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserCard));\n\n","import UserCard from './UserCard';\n\nexport default UserCard;\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport UserCard from \"../../cards/UserCard\";\nimport {isStringIncludes} from \"../../../utils\";\n\n\nclass UserCardContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: '',\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        let {dashboard: {list, selectId}} = this.props;\n        let {search} = this.state;\n        if (!selectId) return null;\n\n        let team = list.filter(t => t.id === selectId)[0];\n        let users = team.users || []\n\n        if (!!search) {\n            users = users.filter(u => isStringIncludes(u, search));\n        }\n\n        return (\n            <div className=\"user-card-container\">\n                <div className=\"d-flex justify-content-between user-card-container-header\">\n                    <h2 className=\"user-container-heading\">{team.team_name}</h2>\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Search user by name\"\n                           value={search || ''}\n                           onChange={(e) =>\n                               this.setState({search: e.target.value}\n                               )}/>\n                </div>\n                <div className=\"user-cards\">\n                    <UserCard/>\n\n                    {users.map(user => (\n                        <UserCard key={user.id} user={user} selectId={selectId}/>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserCardContainer));\n\n","import UserCardContainer from './UserCardContainer';\n\nexport default UserCardContainer;\n","import React, {Component} from 'react'\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport DashboardHeader from \"../../components/headers/DashboardHeader\";\nimport SideNavbar from \"../../components/navbars/SideNavbar\";\nimport UserCardContainer from \"../../components/others/UserCardContainer\";\n\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"dashboard-container\">\n                <DashboardHeader/>\n\n                <div className=\"dashboard-team-user-container\">\n                    <div className=\"dashboard-team-col\">\n                        <SideNavbar/>\n                    </div>\n\n                    <div className=\"dashboard-user-col\">\n                        <UserCardContainer/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst matchDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Dashboard);\n","import Dashboard from \"./Dashboard\";\n\nexport default Dashboard;\n","// External Imports\nimport React from 'react';\nimport {Route, Switch} from 'react-router';\n\n// My Imports\nimport Dashboard from \"./screens/Dashboard\";\n\nfunction App() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path='/' component={Dashboard}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","// External Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\"\n\n// My Imports\nimport store from './store';\nimport App from './App';\n\nimport './scss/main.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.register();"],"sourceRoot":""}