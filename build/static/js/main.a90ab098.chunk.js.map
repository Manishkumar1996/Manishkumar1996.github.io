{
  "version": 3,
  "sources": [
    "actions/dashboard/dashboard.js",
    "utils.js",
    "reducers/dashboard/dashboard.js",
    "reducers/dashboard/index.js",
    "reducers/index.js",
    "store.js",
    "components/headers/DashboardHeader/DashboardHeader.js",
    "components/headers/DashboardHeader/index.js",
    "components/navbars/SideNavbar/SideNavbar.js",
    "components/navbars/SideNavbar/index.js",
    "components/cards/UserCard/UserCard.js",
    "components/cards/UserCard/index.js",
    "components/others/UserCardContainer/UserCardContainer.js",
    "components/others/UserCardContainer/index.js",
    "screens/Dashboard/Dashboard.js",
    "screens/Dashboard/index.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "createTeam",
    "data",
    "type",
    "createUser",
    "deleteUser",
    "selectTeam",
    "margeObjectInList",
    "list",
    "object",
    "i",
    "length",
    "id",
    "selectByDefault",
    "selectId",
    "initialState",
    "isFetching",
    "error",
    "message",
    "retry",
    "reducer",
    "state",
    "action",
    "combineReducers",
    "dashboard",
    "reducers",
    "middleware",
    "applyMiddleware",
    "thunk",
    "store",
    "createStore",
    "allReducers",
    "DashboardHeader",
    "props",
    "teamList",
    "label",
    "value",
    "handleCreateTeam",
    "e",
    "preventDefault",
    "setState",
    "team_type",
    "team_name",
    "users",
    "this",
    "className",
    "onSubmit",
    "htmlFor",
    "options",
    "placeholder",
    "filter",
    "team",
    "onChange",
    "required",
    "target",
    "React",
    "Component",
    "connect",
    "dispatch",
    "bindActionCreators",
    "withRouter",
    "SideNavbar",
    "handleClickSelect",
    "map",
    "key",
    "onClick",
    "UserCard",
    "handleChangeDescription",
    "user_description",
    "style",
    "height",
    "scrollHeight",
    "handleCreate",
    "t",
    "margedList",
    "user_name",
    "handleDelete",
    "user",
    "Users",
    "u",
    "prevProps",
    "prevState",
    "snapshot",
    "defaultProps",
    "UserCardContainer",
    "Dashboard",
    "match",
    "console",
    "App",
    "exact",
    "path",
    "component",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.a90ab098.chunk.js",
  "sourcesContent": [
    "export const CREATE_TEAM = 'CREATE_TEAM';\nexport const CREATE_USER = 'CREATE_USER';\nexport const DELETE_USER = 'DELETE_USER';\nexport const SELECT_TEAM = 'SELECT_TEAM';\n\nexport const createTeam = (data) => ({\n    type: CREATE_TEAM,\n    data\n});\n\n\nexport const createUser = (data) => ({\n    type: CREATE_USER,\n    data\n});\n\nexport const deleteUser = (data) => ({\n    type: DELETE_USER,\n    data\n});\n\nexport const selectTeam = (data) => ({\n    type: SELECT_TEAM,\n    data\n});",
    "import React from \"react\";\n\nexport const margeObjectInList = (list, object) => {\n    for (let i = 0; i < list.length - 1; i++) {\n        if (list[i].id === object.id) {\n            list[i] = object\n        }\n    }\n    return list;\n};\n\nexport const selectByDefault = (list, selectId) => {\n    if (!!list.length) {\n        selectId = !selectId ? list[0].id : selectId;\n    }\n    return selectId\n};\n\n",
    "import {\n    CREATE_TEAM,\n    CREATE_USER,\n    DELETE_USER,\n    SELECT_TEAM,\n} from '../../actions/dashboard/dashboard';\nimport {selectByDefault} from \"../../utils\";\n\nlet LIST = [\n    {\n        id: 'team_0',\n        team_name: 'Manish',\n        team_type: 'team',\n        users: [\n            {\n                id: 'user_0',\n                user_name: 'Kumar',\n                user_description: 'Hello, Manish Kumar Prajapat',\n            },\n            {\n                id: 'user_1',\n                user_name: 'Prajapat',\n                user_description: 'Hello, Manish Kumar',\n            }\n        ]\n    },\n    {\n        id: 'team_1',\n        team_name: 'Kumar',\n        team_type: 'team',\n        users: [\n            {\n                id: 'user_0',\n                user_name: 'manish kumar',\n                user_description: 'Hello, Kumar Prajapat',\n            },\n            {\n                id: 'user_1',\n                user_name: 'ravi kumar',\n                user_description: 'Hello, Manish',\n            }\n        ]\n    }\n];\n\n\nconst initialState = {\n    selectId: '',\n    list: [],\n    isFetching: false,\n    error: false,\n    message: null,\n    retry: false,\n};\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case CREATE_TEAM:\n            return {\n                ...state,\n                list: [...state.list, action.data],\n                selectId: selectByDefault([...state.list, action.data], state.selectId)\n            };\n        case CREATE_USER:\n            return {...state, list: action.data.list};\n        case DELETE_USER:\n            return {...state, list: action.data.list};\n        case SELECT_TEAM:\n            return {...state, selectId: action.data.id};\n\n        default:\n            return {...state};\n    }\n\n};\n\nexport default reducer;\n",
    "//External Imports\nimport {combineReducers} from 'redux';\n\n//My Imports\nimport dashboard from './dashboard';\n\n\nexport default combineReducers({\n    dashboard,\n})\n",
    "// External Imports\nimport {combineReducers} from 'redux';\n\n// My Imports\nimport dashboard from './dashboard';\n\n\nconst reducers = () => combineReducers({\n    dashboard,\n});\n\n\nexport default reducers;\n",
    "// External Imports\nimport {createStore, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';    // allows us to dispatch asynchronous actions.\n\n// My Imports\nimport allReducers from './reducers';\n\nconst middleware = applyMiddleware(thunk);\n\n// logger\nconst store = createStore(\n    allReducers(),\n    middleware\n);\n\nexport default store;\n",
    "import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport Select from \"react-select\";\nimport {createTeam} from \"../../../actions/dashboard/dashboard\";\n\n\nclass DashboardHeader extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team_name: '',\n            team_type: '',\n            users: [],\n        };\n    }\n\n    teamList = [\n        {label: 'Team', value: 'team'}\n    ]\n\n    componentDidMount() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    handleCreateTeam = (e) => {\n        e.preventDefault();\n        let {dashboard: {list}} = this.props\n        this.props.createTeam({id: `team_${list.length}`, ...this.state});\n        this.setState({team_type: '', team_name: ''});\n    }\n\n\n    render() {\n        let {team_name, team_type} = this.state;\n\n        return (\n            <div className=\"dashboard-header-container\">\n                <div className=\"dashboard-header\">\n                    <div className=\"dashboard-team-create\">\n                        <form onSubmit={(e) => this.handleCreateTeam(e)}>\n                            <div className=\"form-row\">\n                                <div className=\"form-group col\">\n                                    <label htmlFor=\"pwd\">Select Type:</label>\n                                    <Select className=\"custom-react-select\" options={this.teamList}\n                                            placeholder=\"choose Any\"\n                                            value={this.teamList.filter(team => team.value === team_type)[0]}\n                                            onChange={({value}) => this.setState({team_type: value})}/>\n                                </div>\n                                <div className=\"form-group col\">\n                                    <label htmlFor=\"name\">Team Name</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter here\"\n                                           value={team_name || ''} required\n                                           onChange={(e) =>\n                                               this.setState({team_name: e.target.value}\n                                               )}/>\n                                </div>\n                                <div className=\"col d-flex justify-content-end align-items-center\">\n                                    <button type=\"submit\" className=\"btn btn-warning btn-sm team-create-button\">\n                                        CREATE\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    createTeam,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(DashboardHeader));\n\n",
    "import DashboardHeader from './DashboardHeader';\n\nexport default DashboardHeader;\n",
    "import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {selectTeam} from \"../../../actions/dashboard/dashboard\";\n\n\nclass SideNavbar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentWillUnmount() {\n\n    }\n\n    handleClickSelect = (id) => {\n        this.props.selectTeam({id})\n    }\n\n    render() {\n        let {dashboard: {list, selectId}} = this.props;\n\n        return (\n            <div className=\"sidenavbar-container\">\n                <h2 className=\"sidenavbar-header\">Teams</h2>\n                <ul className=\"list-unstyled sidenavbar-list-container\">\n                    {list.map(team => (\n                        <li key={team.id} className={`sidenavbar-list ${team.id === selectId ? 'active' : ''}`}\n                            onClick={() => this.handleClickSelect(team.id)}>\n                            {team.team_name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    selectTeam,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SideNavbar));\n\n",
    "import SideNavbar from './SideNavbar';\n\nexport default SideNavbar;\n",
    "import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {margeObjectInList} from \"../../../utils\";\nimport {createUser, deleteUser} from \"../../../actions/dashboard/dashboard\";\n\n\nclass UserCard extends React.Component {\n\n    static propTypes = {\n        selectId: PropTypes.string,\n        user: PropTypes.object,\n    }\n\n    static defaultProps = {\n        selectId: '',\n        user: {},\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_name: !!props.user ? props.user.user_name : '',\n            user_description: !!props.user ? props.user.user_description : '',\n        };\n    }\n\n    componentDidMount() {\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        let {selectId, user} = this.props;\n\n        if (selectId !== prevProps.selectId) {\n            this.setState({user_name: user.user_name, user_description: user.user_description});\n        }\n    }\n\n    handleChangeDescription = (e) => {\n        this.setState({user_description: e.target.value});\n        e.target.style.height = 'auto';\n        e.target.style.height = (e.target.scrollHeight) + 'px';\n    }\n\n    handleCreate = (e) => {\n        e.preventDefault();\n\n        let {dashboard: {list, selectId}} = this.props;\n        let team = list.filter(t => t.id === selectId)[0];\n\n        team.users = [{...this.state, id: `user_${team.users.length}`}, ...team.users];\n        let margedList = margeObjectInList(list, team);\n        this.props.createUser({list: margedList});\n\n        this.setState({user_name: '', user_description: ''});\n    }\n\n    handleDelete = () => {\n        let {user, dashboard: {list, selectId}} = this.props;\n        let team = list.filter(t => t.id === selectId)[0];\n        let Users = team.users.filter(u => u.id !== user.id);\n        team.users = Users;\n\n        let margedList = margeObjectInList(list, team);\n        this.props.deleteUser({list: margedList});\n    }\n\n    render() {\n        let {user_name, user_description} = this.state\n        let {user} = this.props;\n\n        return (\n            <div className=\"user-card\">\n                <form onSubmit={this.handleCreate}>\n                    <div className=\"form-group\">\n                        <label className=\"form-label\" htmlFor=\"user-name\">Name</label>\n                        <input type=\"text\" className=\"form-control\" placeholder=\"Enter here\"\n                               value={user_name || ''} required\n                               onChange={(e) =>\n                                   this.setState({user_name: e.target.value})}/>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label className=\"form-label\" htmlFor=\"user-name\">Description</label>\n                        <textarea className=\"form-control user-description\" value={user_description || ''} required\n                                  onChange={(e) => this.handleChangeDescription(e)}/>\n                    </div>\n                    {!user.id &&\n                    <button type=\"submit\" className=\"btn btn-sm btn-warning user-card-button\">\n                        Create User +\n                    </button>\n                    }\n                </form>\n\n                {!!user.id &&\n                <button className=\"btn btn-sm btn-danger user-card-button\" onClick={this.handleDelete}>\n                    Delete User -\n                </button>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n    createUser,\n    deleteUser,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserCard));\n\n",
    "import UserCard from './UserCard';\n\nexport default UserCard;\n",
    "import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport UserCard from \"../../cards/UserCard\";\n\n\nclass UserCardContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        let {dashboard: {list, selectId}} = this.props;\n        if (!selectId) return (\n            <div className=\"user-card-container\">\n                <h2 className=\"user-container-heading\">Team 1</h2>\n            </div>\n        );\n\n        let team = list.filter(t => t.id === selectId)[0];\n        let users = team.users || []\n\n        return (\n            <div className=\"user-card-container\">\n                <h2 className=\"user-container-heading\">Team 1</h2>\n                <div className=\"user-cards\">\n                    <UserCard/>\n\n                    {users.map(user => (\n                        <UserCard key={user.id} user={user} selectId={selectId}/>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserCardContainer));\n\n",
    "import UserCardContainer from './UserCardContainer';\n\nexport default UserCardContainer;\n",
    "import React, {Component} from 'react'\nimport {bindActionCreators} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport DashboardHeader from \"../../components/headers/DashboardHeader\";\nimport SideNavbar from \"../../components/navbars/SideNavbar\";\nimport UserCardContainer from \"../../components/others/UserCardContainer\";\n\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        let {match} = this.props;\n        console.error(this.props);\n        return (\n            <div className=\"dashboard-container\">\n                <DashboardHeader/>\n\n                <div className=\"dashboard-team-user-container\">\n                    <div className=\"dashboard-team-col\">\n                        <SideNavbar/>\n                    </div>\n\n                    <div className=\"dashboard-user-col\">\n                        <UserCardContainer/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    dashboard: state.dashboard.dashboard\n});\n\nconst matchDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(mapStateToProps, matchDispatchToProps)(Dashboard);\n",
    "import Dashboard from \"./Dashboard\";\n\nexport default Dashboard;\n",
    "// External Imports\nimport React from 'react';\nimport {Route, Switch} from 'react-router';\n\n// My Imports\nimport Dashboard from \"./screens/Dashboard\";\n\nfunction App() {\n    return (\n        <div>\n            <Switch>\n                <Route exact path='/' component={Dashboard}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n",
    "// External Imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from \"react-router-dom\";\n\n// My Imports\nimport store from './store';\nimport App from './App';\n\nimport './scss/main.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n      <BrowserRouter>\n          <App />\n      </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);"
  ],
  "sourceRoot": ""
}